{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\AppData\\\\Roaming\\\\Nodejs\\\\E-DASHBOARD\\\\front-end\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    console.log(\"email,password\", email, password);\n    let result = await fetch('http://localhost:3000/login', {\n      method: 'post',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        'content-Type': 'application/json'\n      }\n    });\n    result = await result.json();\n    console.warn(result);\n    if (result.email) {\n      localStorage.setItem(\"user\".JSON.stringify(result));\n      navigate(\"/\");\n    } else {\n      alert(\"please enter Valid data \");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputBox\",\n      placeholder: \"Enter email\",\n      onChange: e => setEmail(e.target.value),\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"inputBox\",\n      placeholder: \"Enter password\",\n      onChange: e => setPassword(e.target.value),\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      className: \"appButton\",\n      type: \"button\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"TFywpMbHzUen8wcLvPZJLP5PlEQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","useState","password","setPassword","navigate","handleLogin","console","log","result","fetch","method","body","JSON","stringify","headers","json","warn","localStorage","setItem","alert","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/AppData/Roaming/Nodejs/E-DASHBOARD/front-end/src/components/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate} from 'react-router-dom'\r\n\r\nconst Login =()=>{\r\n    const [email,setEmail]= React.useState('')\r\n    const [password,setPassword] = React.useState('')\r\n    const navigate = useNavigate()\r\n    const handleLogin = async () =>{\r\n        console.log(\"email,password\", email,password)\r\n        let result = await fetch('http://localhost:3000/login',{\r\n            method:'post',\r\n            body: JSON.stringify({email,password}),\r\n            headers:{\r\n                'content-Type':'application/json'\r\n            }\r\n        });\r\n        result = await result.json()\r\n        console.warn(result)\r\n        if(result.email){\r\n             localStorage.setItem(\"user\". JSON.stringify(result))\r\n            \r\n            navigate(\"/\")\r\n        }else{\r\n            alert(\"please enter Valid data \")\r\n        }\r\n    }\r\n        return(\r\n        <div className=\"login\">\r\n            <input type=\"text\" className=\"inputBox\" placeholder=\"Enter email\" onChange={(e)=>setEmail(e.target.value)} value={email}/>\r\n            <input type=\"password\" className=\"inputBox\" placeholder=\"Enter password\" onChange={(e)=>setPassword(e.target.value)} value={password}/>\r\n            <button  onClick={handleLogin} className=\"appButton\" type=\"button\" >Login</button>\r\n\r\n            {/* <h1>Login </h1> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAEA,CAAA,KAAI;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAEP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMG,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,KAAK,EAACG,QAAQ,CAAC;IAC7C,IAAIM,MAAM,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;MACnDC,MAAM,EAAC,MAAM;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACd,KAAK;QAACG;MAAQ,CAAC,CAAC;MACtCY,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACJ,CAAC,CAAC;IACFN,MAAM,GAAG,MAAMA,MAAM,CAACO,IAAI,EAAE;IAC5BT,OAAO,CAACU,IAAI,CAACR,MAAM,CAAC;IACpB,IAAGA,MAAM,CAACT,KAAK,EAAC;MACXkB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEN,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,CAAC;MAErDJ,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAI;MACDe,KAAK,CAAC,0BAA0B,CAAC;IACrC;EACJ,CAAC;EACG,oBACAvB,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACF,SAAS,EAAC,UAAU;MAACG,WAAW,EAAC,aAAa;MAACC,QAAQ,EAAGC,CAAC,IAAGzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAE5B;IAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC1HnC,OAAA;MAAO0B,IAAI,EAAC,UAAU;MAACF,SAAS,EAAC,UAAU;MAACG,WAAW,EAAC,gBAAgB;MAACC,QAAQ,EAAGC,CAAC,IAAGtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEzB;IAAS;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACvInC,OAAA;MAASoC,OAAO,EAAE3B,WAAY;MAACe,SAAS,EAAC,WAAW;MAACE,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAE;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGhF;AAEd,CAAC;AAAAjC,EAAA,CAhCKD,KAAK;EAAA,QAGUH,WAAW;AAAA;AAAAuC,EAAA,GAH1BpC,KAAK;AAkCX,eAAeA,KAAK;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}